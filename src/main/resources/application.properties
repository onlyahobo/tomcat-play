management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-components=always
management.endpoint.health.show-details=always

#Max number of threads
server.tomcat.threads.max=1

#The maximum number of connections that the server will accept and process at any given time. When this number has been reached, the server will accept, but
# not process, one further connection. This additional connection be blocked until the number of connections being processed falls below maxConnections at which point the server will start accepting and processing new connections again. Note that once the limit has been reached, the operating system may still accept connections based on the acceptCount setting. The default value is 8192. https://tomcat.apache.org/tomcat-9.0-doc/config/http.html
server.tomcat.max-connections=5

#The maximum length of the operating system provided queue for incoming connection requests when maxConnections has been reached. The operating system may
# ignore this setting and use a different size for the queue. When this queue is full, the operating system may actively refuse additional connections or those connections may time out. The default value is 100. https://tomcat.apache.org/tomcat-9.0-doc/config/http.html
server.tomcat.accept-count=5

server.http2.enabled=true

server.port=8443
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:localhost.p12
# The password used to generate the certificate
server.ssl.key-store-password=1234
# The alias mapped to the certificate
server.ssl.key-alias=localhost

# https://github.com/spring-projects/spring-boot/issues/21914
#server.tomcat.connection-timeout=30s
